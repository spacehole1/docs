<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="10789669-f60d-4730-85ba-98878ab08e51" name="Dirk@SHUTTLEPC 2016-02-23 17:08:34" runUser="SHUTTLEPC\Dirk" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
    <Times creation="2016-02-23T17:08:34.2990766+01:00" queuing="2016-02-23T17:08:34.2990766+01:00" start="2016-02-23T17:08:34.3030762+01:00" finish="2016-02-23T17:08:35.7281108+01:00" />
    <TestSettings name="default" id="4a52e871-36b7-45c1-9877-a64f6ad276be">
        <Execution>
            <TestTypeSpecific />
        </Execution>
        <Deployment runDeploymentRoot="Dirk_SHUTTLEPC 2016-02-23 17_08_34" />
        <Properties />
    </TestSettings>
    <Results>
        <UnitTestResult executionId="b6b95f4e-492e-4986-a770-1cf86d8094be" testId="27968872-ecbf-8ec7-3a98-d1be98533db7" testName="FailingFeatureFailingScenario" computerName="SHUTTLEPC" duration="00:00:00.0013807" startTime="2016-02-23T17:08:34.0000350+01:00" endTime="2016-02-23T17:08:34.0015348+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b6b95f4e-492e-4986-a770-1cf86d8094be">
            <Output>
                <StdOut>
                    Then failing step
                    -&gt; error:
                    true
                    should be
                    False
                    but was
                    True
                </StdOut>
                <ErrorInfo>
                    <Message>
                        Test method Pickles.TestHarness.MsTest.MinimalFeatures.FailingFeature.FailingFeatureFailingScenario threw exception:
                        Shouldly.ChuckedAWobbly:
                        true
                        should be
                        False
                        but was
                        True
                    </Message>
                    <StackTrace>
                        at Shouldly.ShouldlyCoreExtensions.AssertAwesomely[T](T actual, Func`2 specifiedConstraint, Object originalActual, Object originalExpected) in c:\TeamCity\buildAgent\work\10efaabfa8adbd4e\src\Shouldly\ShouldlyCoreExtensions.cs:line 18
                        at Shouldly.ShouldBeTestExtensions.ShouldBe[T](T actual, T expected) in c:\TeamCity\buildAgent\work\10efaabfa8adbd4e\src\Shouldly\ShouldBeTestExtensions.cs:line 17
                        at AutomationLayer.MinimalFeatures.MinimalSteps.ThenFailingStep() in C:\Dev\Code\GitHub\DirkRombauts\pickles-testresults\TestHarness\AutomationLayer\MinimalFeatures\MinimalSteps.cs:line 24
                        at lambda_method(Closure , IContextManager )
                        at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
                        at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments)
                        at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(StepInstance stepInstance)
                        at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
                        at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
                        at Pickles.TestHarness.MsTest.MinimalFeatures.FailingFeature.ScenarioCleanup() in C:\Dev\Code\GitHub\DirkRombauts\pickles-testresults\TestHarness\MsTest\Minimal Features\Failing.feature.cs:line 0
                        at Pickles.TestHarness.MsTest.MinimalFeatures.FailingFeature.FailingFeatureFailingScenario() in C:\Dev\Code\GitHub\DirkRombauts\pickles-testresults\TestHarness\MsTest\Minimal Features\Failing.feature:line 10
                    </StackTrace>
                </ErrorInfo>
            </Output>
        </UnitTestResult>
    </Results>
    <TestDefinitions>
        <UnitTest name="FailingFeatureFailingScenario" storage="c:\dev\code\github\dirkrombauts\pickles-testresults\testharness\mstest\bin\debug\mstestharness.dll" id="27968872-ecbf-8ec7-3a98-d1be98533db7">
            <Execution id="b6b95f4e-492e-4986-a770-1cf86d8094be" />
            <TestMethod codeBase="C:\Dev\Code\GitHub\DirkRombauts\pickles-testresults\TestHarness\mstest\bin\Debug\mstestHarness.dll" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter" className="Pickles.TestHarness.MsTest.MinimalFeatures.FailingFeature" name="FailingFeatureFailingScenario" />
        </UnitTest>
    </TestDefinitions>
    <TestEntries>
        <TestEntry testId="27968872-ecbf-8ec7-3a98-d1be98533db7" executionId="b6b95f4e-492e-4986-a770-1cf86d8094be" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    </TestEntries>
    <TestLists>
        <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
        <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
    </TestLists>
    <ResultSummary outcome="Failed">
        <Counters total="35" executed="25" passed="17" failed="8" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
        <Output>
            <StdOut>Test 'IgnoredAddingTwoNumbers' was skipped in the test run.Test 'NotAutomatedAddingTwoNumbers' was skipped in the test run.Test 'NotAutomatedScenario1' was skipped in the test run.Test 'NotAutomatedScenario2' was skipped in the test run.Test 'NotAutomatedScenario3' was skipped in the test run.Test 'ThisIsAScenarioOutlineWhereOneScenarioIsInconclusive_Inconclusive_1' was skipped in the test run.Test 'AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet1_Inconclusive_1' was skipped in the test run.Test 'AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet1_Inconclusive_2' was skipped in the test run.Test 'FailingFeatureInconclusiveScenario' was skipped in the test run.Test 'InconclusiveFeatureInconclusiveScenario' was skipped in the test run.</StdOut>
        </Output>
    </ResultSummary>
</TestRun>